namespace ProjectEuler

module Problem_002 =

    open Library

    // Even Fibonacci numbers
    // Problem 2
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

    // fetch fibs till 4000000
    // filter evens    

    let FibonacciSequence stopCondition acceptPredicate =      
      let rec sequenceGenerator n sum =
        let fib = Math.Fibonacci n
        if fib > stopCondition then sum
        else if acceptPredicate fib then sum + (sequenceGenerator(n+1) sum)
        else sum + fib + (sequenceGenerator(n+1) sum)
      sequenceGenerator 0 0
    
    let Solve stopCondition acceptPredicate = FibonacciSequence stopCondition acceptPredicate

